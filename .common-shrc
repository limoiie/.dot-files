# >>> shared customization >>>

# prevent ctrl-d from killing session
set -o ignoreeof

# activate cargo
[ -f "~/.cargo/env" ] && . ~/.cargo/env
export PATH=$PATH:~/.cargo/bin

DOT_HOME="$HOME/.dot-files"

# Inspect commands
EMX_EXISTS=$(command -v emacs)
NVI_EXISTS=$(command -v nvim)
EXA_EXISTS=$(command -v exa)
FZF_EXISTS=$(command -v fzf)
BAT_EXISTS=$(command -v bat)
GIT_EXISTS=$(command -v git)
RGP_EXISTS=$(command -v rg)

GIST_EXISTS=$(command -v gist)
STARSHIP_EXISTS=$(command -v starship)

# Environments
export XDG_CONFIG_HOME=~/.config
export BAT_THEME=TwoDark

# Relocate .vimrc file
# export VIMINIT="source ${XDG_CONFIG_HOME}/vim/vimrc"

# fzf options
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border --bind="ctrl-k:kill-line,ctrl-v:page-down,alt-v:page-up,alt-n:preview-page-down,alt-p:preview-page-up"'
export FZF_COMPLETION_TRIGGER='..'

# using bat for man
[ -x "${BAT_EXISTS}" ] && export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# Alias
[ -x "${EXA_EXISTS}" ] && alias ls="exa"
[ -x "${EMX_EXISTS}" ] && alias  e="emacs"
[ -x "${EMX_EXISTS}" ] && alias et="emacs -nw"
[ -x "${EMX_EXISTS}" ] && alias en="emacs -nw"
[ -x "${EMX_EXISTS}" ] && alias ec="emacsclient -a '' -c"
[ -x "${NVI_EXISTS}" ] && alias  v="nvim"
[ -x "${NVI_EXISTS}" ] && alias vi="nvim"

alias la="ls -a"
alias ll="ls -l"
alias lal="ls -al"
alias dtop="lazydocker"
alias j1=%1
alias j2=%2
alias j3=%3
alias j4=%4
alias j5=%5

# disable proxy
proxy_off() {
    unset http_proxy
    unset https_proxy
    unset ftp_proxy
    unset rsync_proxy
    echo -e "Proxy is disabled"
}

# enable proxy
proxy_on() {
    export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"
    export http_proxy="http://127.0.0.1:7890"
    export https_proxy=$http_proxy
    export ftp_proxy=$http_proxy
    export rsync_proxy=$http_proxy
    echo -e "Proxy is enabled on $http_proxy!"
}

# remove all the emacs swap files under current folder
_clean_emacs_cache() {
    rm .*~
}

[ -x "${FZF_EXISTS}" ] && [ -x "${BAT_EXISTS}" ] && \
    source "${DOT_HOME}/scripts/git-fzf.sh"

# Boost z with fzf
[ -x "${FZF_EXISTS}" ] && \
    zf() {
        dir=$(z -l | fzf | awk '{ print $2 }')
        if [[ -d "$dir" ]]; then
            cd $dir
        fi
    }

# Call fzf with bat as preview
[ -x "${FZF_EXISTS}" ] && [ -x "${BAT_EXISTS}" ] && \
    fp() {
        preview="bat --color=always --style=numbers --line-range=:500 {}"
        fzf $@ --preview $preview
    }

# Beautified git-diff boosted with bat and fzf
# [ -x "${FZF_EXISTS}" ] && [ -x "${GIT_EXISTS}" ] && \
#     gdf() {
#         # {-1} stands for the selected file
#         preview="git diff --color=always $@ -- {-1}"
#         git diff $@ --name-only | fzf -m --height=100% --preview $preview
#     }

# Boost tail with bat
[ -x "${BAT_EXISTS}" ] && \
    bail() {
        tail $@ | bat --paging=never -l log
    }

# Boost rg with fzf
[ -x "${FZF_EXISTS}" ] && [ -x "${RGP_EXISTS}" ] && \
    rgf() {
        local initial_query rgp_options rgp_prefix bat_prefix bat_context
        initial_query=${@: -1}
        rgp_options_len=$(($# > 0 ? $# - 1 : 0))
        rgp_options=${@: 1:${rgp_options_len}}
        rgp_prefix="rg --column --line-number --no-heading --color=always --smart-case $rgp_options"
				bat_prefix="bat --color=always --style=numbers"
				bat_context="awk -v A=20 -v B=20 -f ${DOT_HOME}/scripts/awk/bat-range-arg-from-rg.awk"
				FZF_DEFAULT_COMMAND="$rgp_prefix '$initial_query'" \
                  fzf --bind "change:reload:$rgp_prefix {q} || true" \
									--preview="$bat_prefix \$(echo {} | $bat_context)" \
                  --ansi --disabled --query "$initial_query" \
                  --height=50% --layout=reverse
    }

# Boost ps with fzf
[ -x "${FZF_EXISTS}" ] && \
    psf() {
        ps $@ | fzf
    }

# Preview to select gist id and run 
[ -x "${GIST_EXISTS}" ] && \
    gisf() {
        local gist_id=$(gist -l | fzf | awk '{print $1}' | awk -F/ '{print $4}')
        gist $@ ${gist_id}
    }

[ -x "${STARSHIP_EXISTS}" ] || unset USE_STARSHIP_THEME
# <<< shared customization <<<
