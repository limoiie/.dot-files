
# >>> shared customization >>>
# Inspect commands
EMACS_EXISTS="$(command -v emacs)"
NVIM_EXISTS=$(command -v nvim)

EXA_EXISTS=$(command -v exa)
FZF_EXISTS=$(command -v fzf)
BAT_EXISTS=$(command -v bat)
GIT_EXISTS=$(command -v git)
RG_EXISTS=$(command -v rg)

STARSHIP_EXISTS=$(command -v starship)

# Environments
# using bat for man
[ -x ${BAT_EXISTS} ] && export MANPAGER="sh -c 'col -bx | bat -l man -p'"
# fzf options
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border --bind="ctrl-k:kill-line,ctrl-v:page-down,alt-v:page-up,alt-n:preview-page-down,alt-p:preview-page-up"'
export FZF_COMPLETION_TRIGGER='..'

# Alias
[ -x ${EXA_EXISTS} ] && alias ls="exa"
[ -x ${EMACS_EXISTS} ] && alias e="emacs"
[ -x ${EMACS_EXISTS} ] && alias et="emacs -nw"
[ -x ${EMACS_EXISTS} ] && alias en="emacs -nw"
[ -x ${EMACS_EXISTS} ] && alias ec="emacsclient -a '' -c"
[ -x ${NVIM_EXISTS} ] && alias v="nvim"
[ -x ${NVIM_EXISTS} ] && alias vi="nvim"

alias la="ls -al"
alias j1=%1
alias j2=%2
alias j3=%3
alias j4=%4
alias j5=%5

[ -x ${STARSHIP_EXISTS} ] && eval "$(starship init zsh)"

# enable fzf completioin and key-bindings
[ -f "/usr/share/doc/fzf/examples/completion.zsh" ] && source "/usr/share/doc/fzf/examples/completion.zsh"
[ -f "/usr/share/doc/fzf/examples/key-bindings.zsh" ] && source "/usr/share/doc/fzf/examples/key-bindings.zsh"

# disable proxy
function proxy_off() {
    unset http_proxy
    unset https_proxy
    unset ftp_proxy
    unset rsync_proxy
    echo -e "Proxy is disabled"
}

# enable proxy
function proxy_on() {
    export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"
    export http_proxy="http://127.0.0.1:7890"
    export https_proxy=$http_proxy
    export ftp_proxy=$http_proxy
    export rsync_proxy=$http_proxy
    echo -e "Proxy is enabled on $http_proxy!"
}

# remove all the emacs swap files under current folder
function clean_emacs_cache() {
    rm .*~
}

# Boost z with fzf
[ -x ${FZF_EXISTS} ] && function zf() {
    dir=$(z -l | tac | fzf | awk '{ $1="" }1' | sed 's/^ *//')
    if [[ -d "$dir" ]]; then
       cd $dir
    fi
}

# Call fzf with bat as preview
[ -x ${FZF_EXISTS} ] && [ -x ${BAT_EXISTS} ] && function fp() {
    preview="bat --color=always --style=numbers --line-range=:500 {}"
    fzf $@ --preview $preview
}

# Beautified git-diff boosted with bat and fzf
[ -x ${FZF_EXISTS} ] && [ -x ${GIT_EXISTS} ] && function gdf() {
    # {-1} stands for the selected file
    preview="git diff $@ --color=always -- {-1}"
    git diff $@ --name-only | fzf -m --height=100% --preview $preview
}

# Boost tail with bat
[ -x ${BAT_EXISTS} ] && function bail() {
    tail $@ | bat --paging=never -l log
}

# Boost rg with fzf
[ -x ${FZF_EXISTS} ] && [ -x ${RG_EXISTS} ] && function rgf() {
    INITIAL_QUERY="" RG_PREFIX="rg --column --line-number --no-heading --color=always --smart-case $@" \
                 FZF_DEFAULT_COMMAND="$RG_PREFIX '$INITIAL_QUERY'" \
                 fzf --bind "change:reload:$RG_PREFIX {q} || true" \
                 --ansi --query "$INITIAL_QUERY" \
                 --height=50% --layout=reverse
}
# <<< shared customization <<<
